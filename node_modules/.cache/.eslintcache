[{"/Users/Dani/Desktop/webrtc/src/index.js":"1","/Users/Dani/Desktop/webrtc/src/App.js":"2","/Users/Dani/Desktop/webrtc/src/reportWebVitals.js":"3","/Users/Dani/Desktop/webrtc/src/components/video.js":"4","/Users/Dani/Desktop/webrtc/src/components/videos.js":"5","/Users/Dani/Desktop/webrtc/src/components/chat.js":"6","/Users/Dani/Desktop/webrtc/src/components/draggable.js":"7","/Users/Dani/Desktop/webrtc/src/components/Video.js":"8","/Users/Dani/Desktop/webrtc/src/components/dragDrop.js":"9"},{"size":535,"mtime":1691102175000,"results":"10","hashOfConfig":"11"},{"size":21495,"mtime":1691460947000,"results":"12","hashOfConfig":"11"},{"size":362,"mtime":1691102175000,"results":"13","hashOfConfig":"11"},{"size":2114,"mtime":1691297818000,"results":"14","hashOfConfig":"11"},{"size":2222,"mtime":1691302902000,"results":"15","hashOfConfig":"11"},{"size":4836,"mtime":1691298064000,"results":"16","hashOfConfig":"11"},{"size":1027,"mtime":1691297845000,"results":"17","hashOfConfig":"11"},{"size":2114,"mtime":1691297818000,"results":"18","hashOfConfig":"11"},{"size":1502,"mtime":1691298096000,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1audf81",{"filePath":"23","messages":"24","suppressedMessages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32"},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36"},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40"},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32"},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50"},"/Users/Dani/Desktop/webrtc/src/index.js",[],[],"/Users/Dani/Desktop/webrtc/src/App.js",["51","52","53"],[],"/Users/Dani/Desktop/webrtc/src/reportWebVitals.js",[],[],"/Users/Dani/Desktop/webrtc/src/components/video.js",["54","55","56","57","58","59","60","61"],[],"import React, { Component } from 'react';\n\nclass Video extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      mic: true,\n      camera: true,\n    }\n  }\n\n  componentDidMount() {\n    if (this.props.videoStream) {\n      this.video.srcObject = this.props.videoStream\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    console.log(nextProps.videoStream)\n\n    if (nextProps.videoStream && nextProps.videoStream !== this.props.videoStream) {\n      this.video.srcObject = nextProps.videoStream\n    }\n  }\n\n  mutemic = (e) => {\n    const stream = this.video.srcObject.getTracks().filter(track => track.kind === 'audio')\n    this.setState(prevState => {\n      if (stream) stream[0].enabled = !prevState.mic\n      return {mic: !prevState.mic}\n    })\n  }\n\n  mutecamera = (e) => {\n    const stream = this.video.srcObject.getTracks().filter(track => track.kind === 'video')\n    this.setState(prevState => {\n      if (stream) stream[0].enabled = !prevState.camera\n      return {camera: !prevState.camera}\n    })\n  }\n\n  render() {\n    const muteControls = this.props.showMuteControls && (\n        <div>\n          <i onClick={this.mutemic} style={{ cursor: 'pointer', padding: 5, fontSize: 20, color: this.state.mic && 'white' || 'red' }} class='material-icons'>{this.state.mic && 'mic' || 'mic_off'}</i>\n          <i onClick={this.mutecamera} style={{ cursor: 'pointer', padding: 5, fontSize: 20, color: this.state.camera && 'white' || 'red' }} class='material-icons'>{this.state.camera && 'videocam' || 'videocam_off'}</i>\n        </div>\n    )\n    return (\n        <div\n            style={{ ...this.props.frameStyle }}\n        >\n          {/* <audio id={this.props.id} muted={this.props.muted} ref={ (ref) => {this.video = ref }}></audio> */}\n          <video\n              id={this.props.id}\n              muted={this.props.muted}\n              autoPlay\n              style={{ ...this.props.videoStyles }}\n              // ref={ this.props.videoRef }\n              ref={ (ref) => {this.video = ref }}\n          ></video>\n          {muteControls}\n        </div>\n    )\n  }\n}\n\nexport default Video\n","/Users/Dani/Desktop/webrtc/src/components/videos.js",["62","63"],[],"import React, {Component} from 'react'\nimport Video from './Video'\n\nclass Videos extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            rVideos: [],\n            remoteStreams: []\n        }\n    }\n\n    componentWillReceiveProps(nextProps) {\n        if (this.props.remoteStreams !== nextProps.remoteStreams) {\n\n            let _rVideos = nextProps.remoteStreams.map((rVideo, index) => {\n\n                const _videoTrack = rVideo.stream.getTracks().filter(track => track.kind === 'video')\n\n                let video = _videoTrack && (\n                    <Video\n                        videoStream={rVideo.stream}\n                        frameStyle={{ width: 120, float: 'left', padding: '0 3px' }}\n                        videoStyles={{\n                            cursor: 'pointer',\n                            objectFit: 'cover',\n                            borderRadius: 3,\n                            width: '100%',\n                        }}\n                        autoplay\n                    />\n                ) || <div></div>\n                return (\n                    <div\n                        id={rVideo.name}\n                        onClick={() => this.props.switchVideo(rVideo)}\n                        style={{ display: 'inline-block' }}\n                        key={index}\n                    >\n                        {video}\n                    </div>\n                )\n            })\n\n            this.setState({\n                remoteStreams: nextProps.remoteStreams,\n                rVideos: _rVideos\n            })\n        }\n    }\n\n    render() {\n        return (\n            <div\n                style={{\n                    zIndex: 3,\n                    position: 'fixed',\n                    padding: '6px 3px',\n                    backgroundColor: 'rgba(0,0,0,0.3)',\n                    maxHeight: 120,\n                    top: 'auto',\n                    right: 10,\n                    left: 10,\n                    bottom: 10,\n                    overflowX: 'scroll',\n                    whiteSpace: 'nowrap'\n                }}\n            >\n                { this.state.rVideos }\n            </div>\n        )\n    }\n\n}\n\nexport default Videos\n","/Users/Dani/Desktop/webrtc/src/components/chat.js",["64","65","66","67","68"],[],"// https://www.freecodecamp.org/news/building-a-modern-chat-application-with-react-js-558896622194/\n\nimport React, { useState, useEffect, useRef } from 'react'\nimport DragDrop from './dragDrop'\n\nconst Chat = props => {\n    const [message, setMessage] = useState('')\n    const [user, setUser] = useState({ uid: 0, })\n    const [imageZoom, setImageZoom] = useState(false)\n    const [selectedImage, setSelectedImage] = useState('')\n\n    const scrollToBottom = () => {\n        const chat = document.getElementById(\"chatList\");\n        chat.scrollTop = chat.scrollHeight\n    }\n\n    useEffect(() => {\n        scrollToBottom()\n        setUser({ uid: props.user.uid, })\n    }, [props])\n\n    const sendMessage = (msg) => {\n        props.sendMessage(msg);\n        scrollToBottom()\n    }\n\n    const handleSubmit = event => {\n        if (message === '') return\n        event.preventDefault();\n        sendMessage({type:'text', message: { id: user.uid, sender: { uid: user.uid, }, data: { text: message } }})\n        setMessage('')\n    };\n\n    const handleChange = event => {\n        setMessage(event.target.value)\n    }\n\n    const renderMessage = (userType, data) => {\n        console.log('===========', data)\n        const message = data.message\n\n        const msgDiv = data.type === 'text' && (\n            <div className=\"msg\">\n                <p>{message.sender.uid}</p>\n                <div className=\"message\"> {message.data.text}</div>\n            </div>\n        ) || (\n            <div className=\"msg\">\n                <p>{message.sender.uid}</p>\n                <img\n                    onClick={() => {\n                        setImageZoom(true)\n                        setSelectedImage(message.data)\n                    }}\n                    className=\"message\"\n                    style={{\n                        width: 200,\n                        // height: 100\n                        cursor: 'pointer',\n                    }}\n                    src={message.data} />\n            </div>\n        )\n\n        return (<li className={userType} >{ msgDiv }</li>)\n\n    }\n\n    const showEnlargedImage = (data) => {\n        return (<img\n            src={data}\n            style={{\n                backgroundColor: 'black',\n                position: 'relative',\n                zIndex: 100,\n                display: 'block',\n                cursor: 'pointer',\n                marginLeft: 'auto',\n                marginRight: 'auto',\n                padding: 20,\n                borderRadius: 20,\n            }}\n            onClick={() => setImageZoom(false)}\n        />)\n    }\n\n    return (\n        <div>\n            {imageZoom && showEnlargedImage(selectedImage)}\n\n            <div className=\"chatWindow\" style={{\n                zIndex: 10,\n                position: 'absolute',\n                right: 5,\n                top: 190,\n                bottom: 140,\n                width: 350,\n                // height: 650,\n            }}>\n                <ul className=\"chat\" id=\"chatList\">\n                    {props.messages.map(data => (\n                        <div key={data.id}>\n                            {user.uid === data.message.sender.uid ? renderMessage('self', data) : (renderMessage('other', data))}\n                        </div>\n                    ))}\n                </ul>\n                <DragDrop\n                    className=\"chatInputWrapper\"\n                    sendFiles={(files) => {\n                        const reader = new FileReader()\n                        reader.onload = (e) => {\n                            //https://blog.mozilla.org/webrtc/large-data-channel-messages/\n                            //https://lgrahl.de/articles/demystifying-webrtc-dc-size-limit.html\n                            const maximumMessageSize = 262118 //65535 <=== 64KiB // 16384 <=== 16KiB to be safe\n                            if (e.target.result.length <= maximumMessageSize)\n                                sendMessage({ type: 'image', message: { id: user.uid, sender: { uid: user.uid, }, data: e.target.result } })\n                            else\n                                alert('Message exceeds Maximum Message Size!')\n                        }\n\n                        reader.readAsDataURL(files[0])\n                    }}\n                >\n                    <div>\n                        <form onSubmit={handleSubmit}>\n                            <input\n                                className=\"textarea input\"\n                                type=\"text\"\n                                placeholder=\"Enter your message...\"\n                                onChange={handleChange}\n                                value={message}\n                            />\n                        </form>\n                    </div>\n                </DragDrop>\n            </div>\n        </div>\n    )\n}\n\nexport default Chat\n","/Users/Dani/Desktop/webrtc/src/components/draggable.js",[],[],"/Users/Dani/Desktop/webrtc/src/components/Video.js",["69","70","71","72","73","74","75","76"],[],"/Users/Dani/Desktop/webrtc/src/components/dragDrop.js",["77","78","79","80"],[],"//https://medium.com/@650egor/simple-drag-and-drop-file-upload-in-react-2cb409d88929\nimport React, { useState, useEffect, useRef } from 'react'\n\nvar DragDrop = props => {\n  const [bgColor, setBgColor] = useState('transparent')\n\n  const changeBgColor = (state) => {\n    console.log(state)\n    setBgColor(state && 'green' || 'transparent')\n    // setBgColor('green')\n  }\n\n  return (\n      <div style={{\n        backgroundColor: bgColor\n      }} className={props.className}\n          // ref={ref}\n           onDragEnter={(e) => {\n             e.preventDefault()\n             e.stopPropagation()\n             changeBgColor(true)\n             e.dataTransfer.dropEffect = 'copy'\n             console.log('DragEnter', e.dataTransfer.items.length)\n           }}\n\n           onDragLeave={(e) => {\n             e.preventDefault()\n             e.stopPropagation()\n             changeBgColor(false)\n             console.log('onDragLeave')\n           }}\n\n           onDragOver={(e) => {\n             e.preventDefault()\n             e.stopPropagation()\n             console.log('onDragOver')\n           }}\n\n           onDrop={(e) => {\n             e.preventDefault()\n             e.stopPropagation()\n             changeBgColor(false)\n             console.log(e.dataTransfer.items)\n             if (e.dataTransfer.files && e.dataTransfer.files.length > 0) {\n               props.sendFiles(e.dataTransfer.files)\n             }\n           }}\n      >\n        {props.children}\n      </div>\n  )\n}\n\nexport default DragDrop\n",{"ruleId":"81","severity":1,"message":"82","line":562,"column":42,"nodeType":"83","messageId":"84","endLine":562,"endColumn":44},{"ruleId":"81","severity":1,"message":"82","line":562,"column":60,"nodeType":"83","messageId":"84","endLine":562,"endColumn":62},{"ruleId":"85","severity":1,"message":"86","line":569,"column":65,"nodeType":"87","messageId":"88","endLine":569,"endColumn":67},{"ruleId":"81","severity":1,"message":"82","line":45,"column":113,"nodeType":"83","messageId":"84","endLine":45,"endColumn":115},{"ruleId":"81","severity":1,"message":"82","line":45,"column":124,"nodeType":"83","messageId":"84","endLine":45,"endColumn":126},{"ruleId":"81","severity":1,"message":"82","line":45,"column":175,"nodeType":"83","messageId":"84","endLine":45,"endColumn":177},{"ruleId":"81","severity":1,"message":"82","line":45,"column":184,"nodeType":"83","messageId":"84","endLine":45,"endColumn":186},{"ruleId":"81","severity":1,"message":"82","line":46,"column":119,"nodeType":"83","messageId":"84","endLine":46,"endColumn":121},{"ruleId":"81","severity":1,"message":"82","line":46,"column":130,"nodeType":"83","messageId":"84","endLine":46,"endColumn":132},{"ruleId":"81","severity":1,"message":"82","line":46,"column":184,"nodeType":"83","messageId":"84","endLine":46,"endColumn":186},{"ruleId":"81","severity":1,"message":"82","line":46,"column":198,"nodeType":"83","messageId":"84","endLine":46,"endColumn":200},{"ruleId":"81","severity":1,"message":"82","line":21,"column":41,"nodeType":"83","messageId":"84","endLine":21,"endColumn":43},{"ruleId":"81","severity":1,"message":"82","line":33,"column":19,"nodeType":"83","messageId":"84","endLine":33,"endColumn":21},{"ruleId":"89","severity":1,"message":"90","line":3,"column":38,"nodeType":"91","messageId":"92","endLine":3,"endColumn":44},{"ruleId":"81","severity":1,"message":"82","line":42,"column":45,"nodeType":"83","messageId":"84","endLine":42,"endColumn":47},{"ruleId":"81","severity":1,"message":"82","line":47,"column":11,"nodeType":"83","messageId":"84","endLine":47,"endColumn":13},{"ruleId":"93","severity":1,"message":"94","line":50,"column":17,"nodeType":"95","endLine":61,"endColumn":42},{"ruleId":"93","severity":1,"message":"94","line":70,"column":17,"nodeType":"95","endLine":84,"endColumn":11},{"ruleId":"81","severity":1,"message":"82","line":45,"column":113,"nodeType":"83","messageId":"84","endLine":45,"endColumn":115},{"ruleId":"81","severity":1,"message":"82","line":45,"column":124,"nodeType":"83","messageId":"84","endLine":45,"endColumn":126},{"ruleId":"81","severity":1,"message":"82","line":45,"column":175,"nodeType":"83","messageId":"84","endLine":45,"endColumn":177},{"ruleId":"81","severity":1,"message":"82","line":45,"column":184,"nodeType":"83","messageId":"84","endLine":45,"endColumn":186},{"ruleId":"81","severity":1,"message":"82","line":46,"column":119,"nodeType":"83","messageId":"84","endLine":46,"endColumn":121},{"ruleId":"81","severity":1,"message":"82","line":46,"column":130,"nodeType":"83","messageId":"84","endLine":46,"endColumn":132},{"ruleId":"81","severity":1,"message":"82","line":46,"column":184,"nodeType":"83","messageId":"84","endLine":46,"endColumn":186},{"ruleId":"81","severity":1,"message":"82","line":46,"column":198,"nodeType":"83","messageId":"84","endLine":46,"endColumn":200},{"ruleId":"89","severity":1,"message":"96","line":2,"column":27,"nodeType":"91","messageId":"92","endLine":2,"endColumn":36},{"ruleId":"89","severity":1,"message":"90","line":2,"column":38,"nodeType":"91","messageId":"92","endLine":2,"endColumn":44},{"ruleId":"81","severity":1,"message":"82","line":9,"column":22,"nodeType":"83","messageId":"84","endLine":9,"endColumn":24},{"ruleId":"81","severity":1,"message":"82","line":9,"column":33,"nodeType":"83","messageId":"84","endLine":9,"endColumn":35},"no-mixed-operators","Unexpected mix of '&&' and '||'. Use parentheses to clarify the intended order of operations.","LogicalExpression","unexpectedMixedOperator","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-unused-vars","'useRef' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useEffect' is defined but never used."]