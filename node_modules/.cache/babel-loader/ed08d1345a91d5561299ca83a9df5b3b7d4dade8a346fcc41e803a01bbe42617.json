{"ast":null,"code":"import _toConsumableArray from\"/Users/Dani/Desktop/webrtc/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _classCallCheck from\"/Users/Dani/Desktop/webrtc/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";import _createClass from\"/Users/Dani/Desktop/webrtc/node_modules/@babel/runtime/helpers/esm/createClass.js\";import _inherits from\"/Users/Dani/Desktop/webrtc/node_modules/@babel/runtime/helpers/esm/inherits.js\";import _createSuper from\"/Users/Dani/Desktop/webrtc/node_modules/@babel/runtime/helpers/esm/createSuper.js\";import React,{Component}from'react';import io from'socket.io-client';import Chat from'./components/chat';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var App=/*#__PURE__*/function(_Component){_inherits(App,_Component);var _super=_createSuper(App);function App(props){var _this;_classCallCheck(this,App);_this=_super.call(this,props);// https://reactjs.org/docs/refs-and-the-dom.html\n_this.componentDidMount=function(){_this.socket=io('/webrtcPeer',{path:'/webrtc',query:{}});_this.socket.on('connection-success',function(success){console.log(success);});_this.socket.on('offerOrAnswer',function(sdp){_this.textref.value=JSON.stringify(sdp);// set sdp as remote description\n_this.pc.setRemoteDescription(new RTCSessionDescription(sdp));});_this.socket.on('candidate',function(candidate){// console.log('From Peer... ', JSON.stringify(candidate))\n// this.candidates = [...this.candidates, candidate]\n_this.pc.addIceCandidate(new RTCIceCandidate(candidate));});// const pc_config = null\nvar pc_config={\"iceServers\":[// {\n//   urls: 'stun:[STUN_IP]:[PORT]',\n//   'credentials': '[YOR CREDENTIALS]',\n//   'username': '[USERNAME]'\n// },\n{urls:'stun:stun.l.google.com:19302'}]};// https://developer.mozilla.org/en-US/docs/Web/API/RTCPeerConnection\n// create an instance of RTCPeerConnection\n_this.pc=new RTCPeerConnection(pc_config);// triggered when a new candidate is returned\n_this.pc.onicecandidate=function(e){// send the candidates to the remote peer\n// see addCandidate below to be triggered on the remote peer\nif(e.candidate){// console.log(JSON.stringify(e.candidate))\n_this.sendToPeer('candidate',e.candidate);}};// triggered when there is a change in connection state\n_this.pc.oniceconnectionstatechange=function(e){console.log(e);};// triggered when a stream is added to pc, see below - this.pc.addStream(stream)\n_this.pc.onaddstream=function(e){_this.remoteVideoref.current.srcObject=e.stream;};// called when getUserMedia() successfully returns - see below\n// getUserMedia() returns a MediaStream object (https://developer.mozilla.org/en-US/docs/Web/API/MediaStream)\nvar success=function success(stream){window.localStream=stream;_this.localVideoref.current.srcObject=stream;_this.pc.addStream(stream);};// called when getUserMedia() fails - see below\nvar failure=function failure(e){console.log('getUserMedia Error: ',e);};// https://developer.mozilla.org/en-US/docs/Web/API/MediaDevices/getUserMedia\n// see the above link for more constraint options\nvar constraints={audio:true,video:true// video: {\n//   width: 1280,\n//   height: 720\n// },\n// video: {\n//   width: { min: 1280 },\n// }\n};// https://developer.mozilla.org/en-US/docs/Web/API/MediaDevices/getUserMedia\nnavigator.mediaDevices.getUserMedia(constraints).then(success).catch(failure);};_this.sendToPeer=function(messageType,payload){_this.socket.emit(messageType,{socketID:_this.socket.id,payload:payload});};/* ACTION METHODS FROM THE BUTTONS ON SCREEN */_this.createOffer=function(){console.log('Offer');// https://developer.mozilla.org/en-US/docs/Web/API/RTCPeerConnection/createOffer\n// initiates the creation of SDP\n_this.pc.createOffer({offerToReceiveVideo:1}).then(function(sdp){// console.log(JSON.stringify(sdp))\n// set offer sdp as local description\n_this.pc.setLocalDescription(sdp);_this.sendToPeer('offerOrAnswer',sdp);});};// https://developer.mozilla.org/en-US/docs/Web/API/RTCPeerConnection/createAnswer\n// creates an SDP answer to an offer received from remote peer\n_this.createAnswer=function(){console.log('Answer');_this.pc.createAnswer({offerToReceiveVideo:1}).then(function(sdp){// console.log(JSON.stringify(sdp))\n// set answer sdp as local description\n_this.pc.setLocalDescription(sdp);_this.sendToPeer('offerOrAnswer',sdp);});};_this.setRemoteDescription=function(){// retrieve and parse the SDP copied from the remote peer\nvar desc=JSON.parse(_this.textref.value);// set sdp as remote description\n_this.pc.setRemoteDescription(new RTCSessionDescription(desc));};_this.addCandidate=function(){// retrieve and parse the Candidate copied from the remote peer\n// const candidate = JSON.parse(this.textref.value)\n// console.log('Adding candidate:', candidate)\n// add the candidate to the peer connection\n// this.pc.addIceCandidate(new RTCIceCandidate(candidate))\n_this.candidates.forEach(function(candidate){console.log(JSON.stringify(candidate));_this.pc.addIceCandidate(new RTCIceCandidate(candidate));});};_this.localVideoref=/*#__PURE__*/React.createRef();_this.remoteVideoref=/*#__PURE__*/React.createRef();_this.socket=null;_this.candidates=[];return _this;}_createClass(App,[{key:\"render\",value:function render(){var _this2=this;return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"video\",{style:{width:240,height:240,margin:5,backgroundColor:'black'},ref:this.localVideoref,autoPlay:true}),/*#__PURE__*/_jsx(\"video\",{style:{width:240,height:240,margin:5,backgroundColor:'black'},ref:this.remoteVideoref,autoPlay:true}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(Chat,{user:{uid:this.socket&&this.socket.id||''},messages:this.state.messages,sendMessage:function sendMessage(message){_this2.setState(function(prevState){return{messages:[].concat(_toConsumableArray(prevState.messages),[message])};});_this2.state.sendChannels.map(function(sendChannel){sendChannel.readyState==='open'&&sendChannel.send(JSON.stringify(message));});_this2.sendToPeer('new-message',JSON.stringify(message),{local:_this2.socket.id});}}),/*#__PURE__*/_jsx(\"button\",{onClick:this.createOffer,children:\"Offer\"}),/*#__PURE__*/_jsx(\"button\",{onClick:this.createAnswer,children:\"Answer\"}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"textarea\",{style:{width:450,height:40},ref:function ref(_ref){_this2.textref=_ref;}})]});}}]);return App;}(Component);export default App;","map":{"version":3,"names":["React","Component","io","Chat","jsx","_jsx","jsxs","_jsxs","App","_Component","_inherits","_super","_createSuper","props","_this","_classCallCheck","call","componentDidMount","socket","path","query","on","success","console","log","sdp","textref","value","JSON","stringify","pc","setRemoteDescription","RTCSessionDescription","candidate","addIceCandidate","RTCIceCandidate","pc_config","urls","RTCPeerConnection","onicecandidate","e","sendToPeer","oniceconnectionstatechange","onaddstream","remoteVideoref","current","srcObject","stream","window","localStream","localVideoref","addStream","failure","constraints","audio","video","navigator","mediaDevices","getUserMedia","then","catch","messageType","payload","emit","socketID","id","createOffer","offerToReceiveVideo","setLocalDescription","createAnswer","desc","parse","addCandidate","candidates","forEach","createRef","_createClass","key","render","_this2","children","style","width","height","margin","backgroundColor","ref","autoPlay","user","uid","messages","state","sendMessage","message","setState","prevState","concat","_toConsumableArray","sendChannels","map","sendChannel","readyState","send","local","onClick"],"sources":["/Users/Dani/Desktop/webrtc/src/App.js"],"sourcesContent":["import React, { Component } from 'react';\n\nimport io from 'socket.io-client'\n\nimport Chat from './components/chat'\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n\n    // https://reactjs.org/docs/refs-and-the-dom.html\n    this.localVideoref = React.createRef()\n    this.remoteVideoref = React.createRef()\n\n    this.socket = null\n    this.candidates = []\n  }\n\n  componentDidMount = () => {\n\n    this.socket = io(\n      '/webrtcPeer',\n      {\n        path: '/webrtc',\n        query: {}\n      }\n    )\n\n    this.socket.on('connection-success', success => {\n      console.log(success)\n    })\n\n    this.socket.on('offerOrAnswer', (sdp) => {\n      this.textref.value = JSON.stringify(sdp)\n\n      // set sdp as remote description\n      this.pc.setRemoteDescription(new RTCSessionDescription(sdp))\n    })\n\n    this.socket.on('candidate', (candidate) => {\n      // console.log('From Peer... ', JSON.stringify(candidate))\n      // this.candidates = [...this.candidates, candidate]\n      this.pc.addIceCandidate(new RTCIceCandidate(candidate))\n    })\n\n    // const pc_config = null\n\n    const pc_config = {\n      \"iceServers\": [\n        // {\n        //   urls: 'stun:[STUN_IP]:[PORT]',\n        //   'credentials': '[YOR CREDENTIALS]',\n        //   'username': '[USERNAME]'\n        // },\n        {\n          urls : 'stun:stun.l.google.com:19302'\n        }\n      ]\n    }\n\n    // https://developer.mozilla.org/en-US/docs/Web/API/RTCPeerConnection\n    // create an instance of RTCPeerConnection\n    this.pc = new RTCPeerConnection(pc_config)\n\n    // triggered when a new candidate is returned\n    this.pc.onicecandidate = (e) => {\n      // send the candidates to the remote peer\n      // see addCandidate below to be triggered on the remote peer\n      if (e.candidate) {\n        // console.log(JSON.stringify(e.candidate))\n        this.sendToPeer('candidate', e.candidate)\n      }\n    }\n\n    // triggered when there is a change in connection state\n    this.pc.oniceconnectionstatechange = (e) => {\n      console.log(e)\n    }\n\n    // triggered when a stream is added to pc, see below - this.pc.addStream(stream)\n    this.pc.onaddstream = (e) => {\n      this.remoteVideoref.current.srcObject = e.stream\n    }\n\n    // called when getUserMedia() successfully returns - see below\n    // getUserMedia() returns a MediaStream object (https://developer.mozilla.org/en-US/docs/Web/API/MediaStream)\n    const success = (stream) => {\n      window.localStream = stream\n      this.localVideoref.current.srcObject = stream\n      this.pc.addStream(stream)\n    }\n\n    // called when getUserMedia() fails - see below\n    const failure = (e) => {\n      console.log('getUserMedia Error: ', e)\n    }\n\n    // https://developer.mozilla.org/en-US/docs/Web/API/MediaDevices/getUserMedia\n    // see the above link for more constraint options\n    const constraints = {\n      audio: true,\n      video: true,\n      // video: {\n      //   width: 1280,\n      //   height: 720\n      // },\n      // video: {\n      //   width: { min: 1280 },\n      // }\n    }\n\n    // https://developer.mozilla.org/en-US/docs/Web/API/MediaDevices/getUserMedia\n    navigator.mediaDevices.getUserMedia(constraints)\n      .then(success)\n      .catch(failure)\n  }\n\n  sendToPeer = (messageType, payload) => {\n    this.socket.emit(messageType, {\n      socketID: this.socket.id,\n      payload\n    })\n  }\n\n  /* ACTION METHODS FROM THE BUTTONS ON SCREEN */\n\n  createOffer = () => {\n    console.log('Offer')\n\n    // https://developer.mozilla.org/en-US/docs/Web/API/RTCPeerConnection/createOffer\n    // initiates the creation of SDP\n    this.pc.createOffer({ offerToReceiveVideo: 1 })\n      .then(sdp => {\n        // console.log(JSON.stringify(sdp))\n\n        // set offer sdp as local description\n        this.pc.setLocalDescription(sdp)\n\n        this.sendToPeer('offerOrAnswer', sdp)\n    })\n  }\n\n  // https://developer.mozilla.org/en-US/docs/Web/API/RTCPeerConnection/createAnswer\n  // creates an SDP answer to an offer received from remote peer\n  createAnswer = () => {\n    console.log('Answer')\n    this.pc.createAnswer({ offerToReceiveVideo: 1 })\n      .then(sdp => {\n        // console.log(JSON.stringify(sdp))\n\n        // set answer sdp as local description\n        this.pc.setLocalDescription(sdp)\n\n        this.sendToPeer('offerOrAnswer', sdp)\n    })\n  }\n\n  setRemoteDescription = () => {\n    // retrieve and parse the SDP copied from the remote peer\n    const desc = JSON.parse(this.textref.value)\n\n    // set sdp as remote description\n    this.pc.setRemoteDescription(new RTCSessionDescription(desc))\n  }\n\n  addCandidate = () => {\n    // retrieve and parse the Candidate copied from the remote peer\n    // const candidate = JSON.parse(this.textref.value)\n    // console.log('Adding candidate:', candidate)\n\n    // add the candidate to the peer connection\n    // this.pc.addIceCandidate(new RTCIceCandidate(candidate))\n\n    this.candidates.forEach(candidate => {\n      console.log(JSON.stringify(candidate))\n      this.pc.addIceCandidate(new RTCIceCandidate(candidate))\n    });\n  }\n\n  render() {\n\n    return (\n      <div>\n        <video\n          style={{\n            width: 240,\n            height: 240,\n            margin: 5,\n            backgroundColor: 'black'\n          }}\n          ref={ this.localVideoref }\n          autoPlay>\n        </video>\n        <video\n          style={{\n            width: 240,\n            height: 240,\n            margin: 5,\n            backgroundColor: 'black'\n          }}\n          ref={ this.remoteVideoref }\n          autoPlay>\n        </video>\n        <br />\n\n         <Chat\n            user={{\n              uid: this.socket && this.socket.id || ''\n          }}\n          messages={this.state.messages}\n          sendMessage={(message) => {\n            this.setState(prevState => {\n              return {messages: [...prevState.messages, message]}\n            })\n            this.state.sendChannels.map(sendChannel => {\n              sendChannel.readyState === 'open' && sendChannel.send(JSON.stringify(message))\n            })\n            this.sendToPeer('new-message', JSON.stringify(message), {local: this.socket.id})\n          }}\n        />\n\n\n        <button onClick={this.createOffer}>Offer</button>\n        <button onClick={this.createAnswer}>Answer</button>\n\n        <br />\n        <textarea style={{ width: 450, height:40 }} ref={ref => { this.textref = ref }} />\n\n        {/* <br />\n        <button onClick={this.setRemoteDescription}>Set Remote Desc</button>\n        <button onClick={this.addCandidate}>Add Candidate</button> */}\n      </div>\n    )\n  }\n}\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}