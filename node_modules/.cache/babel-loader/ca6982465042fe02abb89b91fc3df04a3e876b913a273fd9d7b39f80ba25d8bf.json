{"ast":null,"code":"import _classCallCheck from\"/Users/Dani/Desktop/webrtc/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";import _createClass from\"/Users/Dani/Desktop/webrtc/node_modules/@babel/runtime/helpers/esm/createClass.js\";import _inherits from\"/Users/Dani/Desktop/webrtc/node_modules/@babel/runtime/helpers/esm/inherits.js\";import _createSuper from\"/Users/Dani/Desktop/webrtc/node_modules/@babel/runtime/helpers/esm/createSuper.js\";import React,{Component}from'react';import io from'socket.io-client';import Video from'./components/video';import Videos from'./components/videos';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var App=/*#__PURE__*/function(_Component){_inherits(App,_Component);var _super=_createSuper(App);function App(props){var _this;_classCallCheck(this,App);_this=_super.call(this,props);_this.componentDidMount=function(){_this.getLocalStream();_this.socket=io.connect(_this.serviceIP,{path:'/webrtc',query:{}});_this.socket.on('connection-success',function(success){console.log(success);});_this.socket.on('offerOrAnswer',function(sdp){_this.textref.value=JSON.stringify(sdp);// set sdp as remote description\n_this.pc.setRemoteDescription(new RTCSessionDescription(sdp));});_this.socket.on('candidate',function(candidate){// console.log('From Peer... ', JSON.stringify(candidate))\n// this.candidates = [...this.candidates, candidate]\n_this.pc.addIceCandidate(new RTCIceCandidate(candidate));});// const pc_config = null\n// https://developer.mozilla.org/en-US/docs/Web/API/RTCPeerConnection\n// create an instance of RTCPeerConnection\n_this.pc=new RTCPeerConnection(pc_config);// triggered when a new candidate is returned\n_this.pc.onicecandidate=function(e){// send the candidates to the remote peer\n// see addCandidate below to be triggered on the remote peer\nif(e.candidate){// console.log(JSON.stringify(e.candidate))\n_this.sendToPeer('candidate',e.candidate);}};// triggered when there is a change in connection state\n_this.pc.oniceconnectionstatechange=function(e){console.log(e);};// triggered when a stream is added to pc, see below - this.pc.addStream(stream)\n//this.pc.onaddstream = (e) => {\n//  this.remoteVideoref.current.srcObject = e.stream\n//}\n_this.pc.ontrack=function(e){debugger;//this.remoteVideoref.current.srcObject = e.streams[0]\n_this.setState({remoteStream:e.streams[0]});};};_this.getLocalStream=function(){// called when getUserMedia() successfully returns - see below\n// getUserMedia() returns a MediaStream object (https://developer.mozilla.org/en-US/docs/Web/API/MediaStream)\nvar success=function success(stream){window.localStream=stream;// this.localVideoref.current.srcObject = stream\n// this.pc.addStream(stream);\n_this.setState({localStream:stream});_this.whoisOnline();};// called when getUserMedia() fails - see below\nvar failure=function failure(e){console.log('getUserMedia Error: ',e);};// https://developer.mozilla.org/en-US/docs/Web/API/MediaDevices/getUserMedia\n// see the above link for more constraint options\nvar constraints={// audio: true,\nvideo:true,// video: {\n//   width: 1280,\n//   height: 720\n// },\n// video: {\n//   width: { min: 1280 },\n// }\noptions:{mirror:true}};// https://developer.mozilla.org/en-US/docs/Web/API/MediaDevices/getUserMedia\nnavigator.mediaDevices.getUserMedia(constraints).then(success).catch(failure);};_this.sendToPeer=function(messageType,payload){_this.socket.emit(messageType,{socketID:_this.socket.id,payload:payload});};/* ACTION METHODS FROM THE BUTTONS ON SCREEN */_this.createOffer=function(){console.log('Offer');// https://developer.mozilla.org/en-US/docs/Web/API/RTCPeerConnection/createOffer\n// initiates the creation of SDP\n_this.pc.createOffer(_this.state.sdpConstraints).then(function(sdp){// console.log(JSON.stringify(sdp))\n// set offer sdp as local description\n_this.pc.setLocalDescription(sdp);_this.sendToPeer('offerOrAnswer',sdp);});};// https://developer.mozilla.org/en-US/docs/Web/API/RTCPeerConnection/createAnswer\n// creates an SDP answer to an offer received from remote peer\n_this.createAnswer=function(){console.log('Answer');_this.pc.createAnswer(_this.state.sdpConstraints).then(function(sdp){// console.log(JSON.stringify(sdp))\n// set answer sdp as local description\n_this.pc.setLocalDescription(sdp);_this.sendToPeer('offerOrAnswer',sdp);});};_this.setRemoteDescription=function(){// retrieve and parse the SDP copied from the remote peer\nvar desc=JSON.parse(_this.textref.value);// set sdp as remote description\n_this.pc.setRemoteDescription(new RTCSessionDescription(desc));};_this.addCandidate=function(){// retrieve and parse the Candidate copied from the remote peer\n// const candidate = JSON.parse(this.textref.value)\n// console.log('Adding candidate:', candidate)\n// add the candidate to the peer connection\n// this.pc.addIceCandidate(new RTCIceCandidate(candidate))\n_this.candidates.forEach(function(candidate){console.log(JSON.stringify(candidate));_this.pc.addIceCandidate(new RTCIceCandidate(candidate));});};_this.state={localStream:null,// used to hold local stream object to avoid recreating the stream everytime a new offer comes\nremoteStream:null,// used to hold remote stream object that is displayed in the main screen\nremoteStreams:[],// holds all Video Streams (all remote streams)\npeerConnections:{},// holds all Peer Connections\nselectedVideo:null,status:'Please wait...',pc_config:{\"iceServers\":[{urls:'stun:stun.l.google.com:19302'}]},sdpConstraints:{'mandatory':{'OfferToReceiveAudio':true,'OfferToReceiveVideo':true}}};// DONT FORGET TO CHANGE TO YOUR URL\n_this.serviceIP='https://occurro.serveo.net/webrtcPeer';// https://reactjs.org/docs/refs-and-the-dom.html\n//this.localVideoref = React.createRef()\n//this.remoteVideoref = React.createRef()\n_this.socket=null;//this.candidates = []\nreturn _this;}_createClass(App,[{key:\"render\",value:function render(){var _this2=this;console.log(this.state.localStream);//const statusText = <div style={{ color: 'yellow', padding: 5 }}>{this.state.status}</div>\nreturn/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Video,{videoStyles:{zIndex:2,position:'fixed',right:0,width:200,height:200,margin:5,backgroundColor:'black'}//ref={this.localVideoref}\n,videoStream:this.state.localStream,autoPlay:true,muted:true}),/*#__PURE__*/_jsx(Video,{videoStyles:{zIndex:1,position:'fixed',bottom:0,minWidth:'100%',minHeight:'100%',backgroundColor:'black'}//ref={ this.remoteVideoref }\n,videoStream:this.state.remoteStream,autoPlay:true}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"div\",{style:{zIndex:3,position:'absolute',margin:10,backgroundColor:'#cdc4ff4f',padding:10,borderRadius:5},children:statusText}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(Videos,{switchVideo:this.switchVideo,remoteStreams:this.state.remoteStreams})}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsxs(\"div\",{style:{zIndex:1,position:'fixed'},children:[/*#__PURE__*/_jsx(\"button\",{onClick:this.createOffer,children:\"Call\"}),/*#__PURE__*/_jsx(\"button\",{onClick:this.createAnswer,children:\"Answer\"}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"textarea\",{style:{width:450,height:40},ref:function ref(_ref){_this2.textref=_ref;}})]})]});}}]);return App;}(Component);export default App;","map":{"version":3,"names":["React","Component","io","Video","Videos","jsx","_jsx","jsxs","_jsxs","App","_Component","_inherits","_super","_createSuper","props","_this","_classCallCheck","call","componentDidMount","getLocalStream","socket","connect","serviceIP","path","query","on","success","console","log","sdp","textref","value","JSON","stringify","pc","setRemoteDescription","RTCSessionDescription","candidate","addIceCandidate","RTCIceCandidate","RTCPeerConnection","pc_config","onicecandidate","e","sendToPeer","oniceconnectionstatechange","ontrack","setState","remoteStream","streams","stream","window","localStream","whoisOnline","failure","constraints","video","options","mirror","navigator","mediaDevices","getUserMedia","then","catch","messageType","payload","emit","socketID","id","createOffer","state","sdpConstraints","setLocalDescription","createAnswer","desc","parse","addCandidate","candidates","forEach","remoteStreams","peerConnections","selectedVideo","status","urls","_createClass","key","render","_this2","children","videoStyles","zIndex","position","right","width","height","margin","backgroundColor","videoStream","autoPlay","muted","bottom","minWidth","minHeight","style","padding","borderRadius","statusText","switchVideo","onClick","ref"],"sources":["/Users/Dani/Desktop/webrtc/src/App.js"],"sourcesContent":["import React, { Component } from 'react';\n\nimport io from 'socket.io-client'\n\nimport Video from './components/video'\nimport Videos from './components/videos'\n\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n\n      this.state = {\n          localStream: null,    // used to hold local stream object to avoid recreating the stream everytime a new offer comes\n          remoteStream: null,    // used to hold remote stream object that is displayed in the main screen\n\n          remoteStreams: [],    // holds all Video Streams (all remote streams)\n          peerConnections: {},  // holds all Peer Connections\n          selectedVideo: null,\n\n          status: 'Please wait...',\n\n          pc_config : {\n              \"iceServers\": [\n                  {\n                      urls : 'stun:stun.l.google.com:19302'\n                  }\n              ]\n          },\n\n          sdpConstraints: {\n              'mandatory': {\n                  'OfferToReceiveAudio': true,\n                  'OfferToReceiveVideo': true\n              }\n          },\n      }\n\n      // DONT FORGET TO CHANGE TO YOUR URL\n      this.serviceIP = 'https://occurro.serveo.net/webrtcPeer'\n\n          // https://reactjs.org/docs/refs-and-the-dom.html\n    //this.localVideoref = React.createRef()\n    //this.remoteVideoref = React.createRef()\n\n    this.socket = null\n    //this.candidates = []\n  }\n\n  componentDidMount = () => {\n\n    this.getLocalStream()\n\n    this.socket = io.connect(\n        this.serviceIP,\n      {\n        path: '/webrtc',\n        query: {}\n      }\n    )\n\n    this.socket.on('connection-success', success => {\n      console.log(success)\n    })\n\n    this.socket.on('offerOrAnswer', (sdp) => {\n      this.textref.value = JSON.stringify(sdp)\n\n      // set sdp as remote description\n      this.pc.setRemoteDescription(new RTCSessionDescription(sdp))\n    })\n\n    this.socket.on('candidate', (candidate) => {\n      // console.log('From Peer... ', JSON.stringify(candidate))\n      // this.candidates = [...this.candidates, candidate]\n      this.pc.addIceCandidate(new RTCIceCandidate(candidate))\n    })\n\n    // const pc_config = null\n\n\n\n    // https://developer.mozilla.org/en-US/docs/Web/API/RTCPeerConnection\n    // create an instance of RTCPeerConnection\n    this.pc = new RTCPeerConnection(pc_config)\n\n    // triggered when a new candidate is returned\n    this.pc.onicecandidate = (e) => {\n      // send the candidates to the remote peer\n      // see addCandidate below to be triggered on the remote peer\n      if (e.candidate) {\n        // console.log(JSON.stringify(e.candidate))\n        this.sendToPeer('candidate', e.candidate)\n      }\n    }\n\n    // triggered when there is a change in connection state\n    this.pc.oniceconnectionstatechange = (e) => {\n      console.log(e)\n    }\n\n    // triggered when a stream is added to pc, see below - this.pc.addStream(stream)\n    //this.pc.onaddstream = (e) => {\n    //  this.remoteVideoref.current.srcObject = e.stream\n    //}\n\n    this.pc.ontrack = (e) => {\n         debugger\n         //this.remoteVideoref.current.srcObject = e.streams[0]\n\n         this.setState({\n           remoteStream: e.streams[0]\n         })\n       }\n  }\n\n    getLocalStream = () => {\n        // called when getUserMedia() successfully returns - see below\n        // getUserMedia() returns a MediaStream object (https://developer.mozilla.org/en-US/docs/Web/API/MediaStream)\n        const success = (stream) => {\n            window.localStream = stream\n            // this.localVideoref.current.srcObject = stream\n            // this.pc.addStream(stream);\n            this.setState({\n                localStream: stream\n            })\n\n            this.whoisOnline()\n        }\n\n        // called when getUserMedia() fails - see below\n        const failure = (e) => {\n            console.log('getUserMedia Error: ', e)\n        }\n\n        // https://developer.mozilla.org/en-US/docs/Web/API/MediaDevices/getUserMedia\n        // see the above link for more constraint options\n        const constraints = {\n            // audio: true,\n            video: true,\n            // video: {\n            //   width: 1280,\n            //   height: 720\n            // },\n            // video: {\n            //   width: { min: 1280 },\n            // }\n            options: {\n                mirror: true,\n            }\n        }\n\n        // https://developer.mozilla.org/en-US/docs/Web/API/MediaDevices/getUserMedia\n        navigator.mediaDevices.getUserMedia(constraints)\n            .then(success)\n            .catch(failure)\n    }\n\n  sendToPeer = (messageType, payload) => {\n    this.socket.emit(messageType, {\n      socketID: this.socket.id,\n      payload\n    })\n  }\n\n  /* ACTION METHODS FROM THE BUTTONS ON SCREEN */\n\n  createOffer = () => {\n    console.log('Offer')\n\n    // https://developer.mozilla.org/en-US/docs/Web/API/RTCPeerConnection/createOffer\n    // initiates the creation of SDP\n    this.pc.createOffer(this.state.sdpConstraints)\n      .then(sdp => {\n        // console.log(JSON.stringify(sdp))\n\n        // set offer sdp as local description\n        this.pc.setLocalDescription(sdp)\n\n        this.sendToPeer('offerOrAnswer', sdp)\n    })\n  }\n\n  // https://developer.mozilla.org/en-US/docs/Web/API/RTCPeerConnection/createAnswer\n  // creates an SDP answer to an offer received from remote peer\n  createAnswer = () => {\n    console.log('Answer')\n    this.pc.createAnswer(this.state.sdpConstraints)\n      .then(sdp => {\n        // console.log(JSON.stringify(sdp))\n\n        // set answer sdp as local description\n        this.pc.setLocalDescription(sdp)\n\n        this.sendToPeer('offerOrAnswer', sdp)\n    })\n  }\n\n  setRemoteDescription = () => {\n    // retrieve and parse the SDP copied from the remote peer\n    const desc = JSON.parse(this.textref.value)\n\n    // set sdp as remote description\n    this.pc.setRemoteDescription(new RTCSessionDescription(desc))\n  }\n\n  addCandidate = () => {\n    // retrieve and parse the Candidate copied from the remote peer\n    // const candidate = JSON.parse(this.textref.value)\n    // console.log('Adding candidate:', candidate)\n\n    // add the candidate to the peer connection\n    // this.pc.addIceCandidate(new RTCIceCandidate(candidate))\n\n    this.candidates.forEach(candidate => {\n      console.log(JSON.stringify(candidate))\n      this.pc.addIceCandidate(new RTCIceCandidate(candidate))\n    });\n  }\n\n  render() {\n\n      console.log(this.state.localStream)\n\n      //const statusText = <div style={{ color: 'yellow', padding: 5 }}>{this.state.status}</div>\n\n\n      return (\n      <div>\n        <Video\n          videoStyles={{\n            zIndex:2,\n            position: 'fixed',\n            right:0,\n            width: 200,\n            height: 200,\n            margin: 5,\n            backgroundColor: 'black'\n          }}\n          //ref={this.localVideoref}\n          videoStream={this.state.localStream}\n          autoPlay muted>\n        </Video>\n        <Video\n          videoStyles={{\n            zIndex: 1,\n            position: 'fixed',\n            bottom: 0,\n            minWidth: '100%',\n            minHeight: '100%',\n            backgroundColor: 'black'\n          }}\n            //ref={ this.remoteVideoref }\n            videoStream={this.state.remoteStream}\n          autoPlay>\n        </Video>\n        <br />\n          <div style={{\n              zIndex: 3,\n              position: 'absolute',\n              margin: 10,\n              backgroundColor: '#cdc4ff4f',\n              padding: 10,\n              borderRadius: 5,\n          }}>\n              { statusText }\n          </div>\n          <div>\n              <Videos\n                  switchVideo={this.switchVideo}\n                  remoteStreams={this.state.remoteStreams}\n              ></Videos>\n          </div>\n          <br />\n\n        <div style={{zIndex: 1, position: 'fixed'}} >\n          <button onClick={this.createOffer}>Call</button>\n          <button onClick={this.createAnswer}>Answer</button>\n\n          <br />\n          <textarea style={{ width: 450, height:40 }} ref={ref => { this.textref = ref }} />\n        </div>\n\n          {/*\n        <br />\n        <button onClick={this.setRemoteDescription}>Set Remote Desc</button>\n        <button onClick={this.addCandidate}>Add Candidate</button>\n        */}\n\n      </div>\n    )\n  }\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}