{"ast":null,"code":"import _toConsumableArray from\"/Users/Dani/Desktop/webrtc/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _defineProperty from\"/Users/Dani/Desktop/webrtc/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";import _objectSpread from\"/Users/Dani/Desktop/webrtc/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _classCallCheck from\"/Users/Dani/Desktop/webrtc/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";import _createClass from\"/Users/Dani/Desktop/webrtc/node_modules/@babel/runtime/helpers/esm/createClass.js\";import _inherits from\"/Users/Dani/Desktop/webrtc/node_modules/@babel/runtime/helpers/esm/inherits.js\";import _createSuper from\"/Users/Dani/Desktop/webrtc/node_modules/@babel/runtime/helpers/esm/createSuper.js\";import React,{Component}from'react';import io from'socket.io-client';import Video from'./components/video';import Videos from'./components/videos';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var App=/*#__PURE__*/function(_Component){_inherits(App,_Component);var _super=_createSuper(App);function App(props){var _this;_classCallCheck(this,App);_this=_super.call(this,props);_this.getLocalStream=function(){// called when getUserMedia() successfully returns - see below\n// getUserMedia() returns a MediaStream object (https://developer.mozilla.org/en-US/docs/Web/API/MediaStream)\nvar success=function success(stream){window.localStream=stream;// this.localVideoref.current.srcObject = stream\n// this.pc.addStream(stream);\n_this.setState({localStream:stream});_this.whoisOnline();};// called when getUserMedia() fails - see below\nvar failure=function failure(e){console.log('getUserMedia Error: ',e);};// https://developer.mozilla.org/en-US/docs/Web/API/MediaDevices/getUserMedia\n// see the above link for more constraint options\nvar constraints={audio:true,video:true,// video: {\n//   width: 1280,\n//   height: 720\n// },\n// video: {\n//   width: { min: 1280 },\n// }\noptions:{mirror:true}};// https://developer.mozilla.org/en-US/docs/Web/API/MediaDevices/getUserMedia\nnavigator.mediaDevices.getUserMedia(constraints).then(success).catch(failure);};_this.whoisOnline=function(){// let all peers know I am joining\n_this.sendToPeer('onlinePeers',null,{local:_this.socket.id});};_this.sendToPeer=function(messageType,payload,socketID){_this.socket.emit(messageType,{socketID:socketID,payload:payload});};_this.createPeerConnection=function(socketID,callback){try{var pc=new RTCPeerConnection(_this.state.pc_config);// add pc to peerConnections object\nvar peerConnections=_objectSpread(_objectSpread({},_this.state.peerConnections),{},_defineProperty({},socketID,pc));_this.setState({peerConnections:peerConnections});pc.onicecandidate=function(e){if(e.candidate){_this.sendToPeer('candidate',e.candidate,{local:_this.socket.id,remote:socketID});}};pc.oniceconnectionstatechange=function(e){// if (pc.iceConnectionState === 'disconnected') {\n//   const remoteStreams = this.state.remoteStreams.filter(stream => stream.id !== socketID)\n//   this.setState({\n//     remoteStream: remoteStreams.length > 0 && remoteStreams[0].stream || null,\n//   })\n// }\n};pc.ontrack=function(e){var _remoteStream=null;var remoteStreams=_this.state.remoteStreams;var remoteVideo={};// 1. check if stream already exists in remoteStreams\nvar rVideos=_this.state.remoteStreams.filter(function(stream){return stream.id===socketID;});// 2. if it does exist then add track\nif(rVideos.length){_remoteStream=rVideos[0].stream;_remoteStream.addTrack(e.track,_remoteStream);remoteVideo=_objectSpread(_objectSpread({},rVideos[0]),{},{stream:_remoteStream});remoteStreams=_this.state.remoteStreams.map(function(_remoteVideo){return _remoteVideo.id===remoteVideo.id&&remoteVideo||_remoteVideo;});}else{// 3. if not, then create new stream and add track\n_remoteStream=new MediaStream();_remoteStream.addTrack(e.track,_remoteStream);remoteVideo={id:socketID,name:socketID,stream:_remoteStream};remoteStreams=[].concat(_toConsumableArray(_this.state.remoteStreams),[remoteVideo]);}// const remoteVideo = {\n//   id: socketID,\n//   name: socketID,\n//   stream: e.streams[0]\n// }\n_this.setState(function(prevState){// If we already have a stream in display let it stay the same, otherwise use the latest stream\nvar remoteStream=prevState.remoteStreams.length>0?{}:{remoteStream:e.streams[0]};// get currently selected video\nvar selectedVideo=prevState.remoteStreams.filter(function(stream){return stream.id===prevState.selectedVideo.id;});// if the video is still in the list, then do nothing, otherwise set to new video stream\nselectedVideo=selectedVideo.length?{}:{selectedVideo:remoteVideo};return _objectSpread(_objectSpread(_objectSpread({},selectedVideo),remoteStream),{},{remoteStreams:[].concat(_toConsumableArray(prevState.remoteStreams),[remoteVideo])});});};pc.close=function(){// alert('GONE')\n};if(_this.state.localStream)//pc.addStream(this.state.localStream)\n_this.state.localStream.getTracks().forEach(function(track){pc.addTrack(track,_this.state.localStream);});// return pc\ncallback(pc);}catch(e){console.log('Something went wrong! pc not created!!',e);// return;\ncallback(null);}};_this.componentDidMount=function(){_this.socket=io.connect(_this.serviceIP,{path:'/io/webrtc',query:{room:window.location.pathname}});_this.socket.on('connection-success',function(data){_this.getLocalStream();console.log(data.success);var status=data.peerCount>1?\"Total Connected Peers to room \".concat(window.location.pathname,\": \").concat(data.peerCount):'Waiting for other peers to connect';_this.setState({status:status});});_this.socket.on('joined-peers',function(data){_this.setState({status:data.peerCount>1?\"Total Connected Peers to room \".concat(window.location.pathname,\": \").concat(data.peerCount):'Waiting for other peers to connect'});});_this.socket.on('peer-disconnected',function(data){console.log('peer-disconnected',data);var remoteStreams=_this.state.remoteStreams.filter(function(stream){return stream.id!==data.socketID;});_this.setState(function(prevState){// check if disconnected peer is the selected video and if there still connected peers, then select the first\nvar selectedVideo=prevState.selectedVideo.id===data.socketID&&remoteStreams.length?{selectedVideo:remoteStreams[0]}:null;return _objectSpread(_objectSpread({// remoteStream: remoteStreams.length > 0 && remoteStreams[0].stream || null,\nremoteStreams:remoteStreams},selectedVideo),{},{status:data.peerCount>1?\"Total Connected Peers to room \".concat(window.location.pathname,\": \").concat(data.peerCount):'Waiting for other peers to connect'});});});// this.socket.on('offerOrAnswer', (sdp) => {\n//   this.textref.value = JSON.stringify(sdp)\n//   // set sdp as remote description\n//   this.pc.setRemoteDescription(new RTCSessionDescription(sdp))\n// })\n_this.socket.on('online-peer',function(socketID){console.log('connected peers ...',socketID);// create and send offer to the peer (data.socketID)\n// 1. Create new pc\n_this.createPeerConnection(socketID,function(pc){// 2. Create Offer\nif(pc)pc.createOffer(_this.state.sdpConstraints).then(function(sdp){pc.setLocalDescription(sdp);_this.sendToPeer('offer',sdp,{local:_this.socket.id,remote:socketID});});});});_this.socket.on('offer',function(data){_this.createPeerConnection(data.socketID,function(pc){pc.addStream(_this.state.localStream);pc.setRemoteDescription(new RTCSessionDescription(data.sdp)).then(function(){// 2. Create Answer\npc.createAnswer(_this.state.sdpConstraints).then(function(sdp){pc.setLocalDescription(sdp);_this.sendToPeer('answer',sdp,{local:_this.socket.id,remote:data.socketID});});});});});_this.socket.on('answer',function(data){// get remote's peerConnection\nvar pc=_this.state.peerConnections[data.socketID];console.log(data.sdp);pc.setRemoteDescription(new RTCSessionDescription(data.sdp)).then(function(){});});_this.socket.on('candidate',function(data){// get remote's peerConnection\nvar pc=_this.state.peerConnections[data.socketID];if(pc)pc.addIceCandidate(new RTCIceCandidate(data.candidate));});// const pc_config = null\n// const pc_config = {\n//   \"iceServers\": [\n//     // {\n//     //   urls: 'stun:[STUN_IP]:[PORT]',\n//     //   'credentials': '[YOR CREDENTIALS]',\n//     //   'username': '[USERNAME]'\n//     // },\n//     {\n//       urls : 'stun:stun.l.google.com:19302'\n//     }\n//   ]\n// }\n// https://developer.mozilla.org/en-US/docs/Web/API/RTCPeerConnection\n// create an instance of RTCPeerConnection\n// this.pc = new RTCPeerConnection(this.state.pc_config)\n// triggered when a new candidate is returned\n// this.pc.onicecandidate = (e) => {\n//   // send the candidates to the remote peer\n//   // see addCandidate below to be triggered on the remote peer\n//   if (e.candidate) {\n//     // console.log(JSON.stringify(e.candidate))\n//     this.sendToPeer('candidate', e.candidate)\n//   }\n// }\n// triggered when there is a change in connection state\n// this.pc.oniceconnectionstatechange = (e) => {\n//   console.log(e)\n// }\n// triggered when a stream is added to pc, see below - this.pc.addStream(stream)\n// this.pc.onaddstream = (e) => {\n//   this.remoteVideoref.current.srcObject = e.stream\n// }\n// this.pc.ontrack = (e) => {\n//   debugger\n//   // this.remoteVideoref.current.srcObject = e.streams[0]\n//   this.setState({\n//     remoteStream: e.streams[0]\n//   })\n// }\n};_this.switchVideo=function(_video){console.log(_video);_this.setState({selectedVideo:_video});};_this.state={localStream:null,// used to hold local stream object to avoid recreating the stream everytime a new offer comes\nremoteStream:null,// used to hold remote stream object that is displayed in the main screen\nremoteStreams:[],// holds all Video Streams (all remote streams)\npeerConnections:{},// holds all Peer Connections\nselectedVideo:null,status:'Please wait...',pc_config:{\"iceServers\":[{urls:'stun:stun.l.google.com:19302'}]},sdpConstraints:{'mandatory':{'OfferToReceiveAudio':true,'OfferToReceiveVideo':true}}};// DONT FORGET TO CHANGE TO YOUR URL\n_this.serviceIP='https://deripio.serveo.net/webrtcPeer';// https://reactjs.org/docs/refs-and-the-dom.html\n// this.localVideoref = React.createRef()\n// this.remoteVideoref = React.createRef()\n_this.socket=null;// this.candidates = []\nreturn _this;}_createClass(App,[{key:\"render\",value:function render(){var _this2=this;console.log(this.state.localStream);var statusText=/*#__PURE__*/_jsx(\"div\",{style:{color:'yellow',padding:5},children:this.state.status});return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Draggable,{style:{zIndex:101,position:'absolute',right:0,cursor:'move'},children:/*#__PURE__*/_jsx(Video,{videoStyles:{// zIndex:2,\n// position: 'absolute',\n// right:0,\nwidth:200// height: 200,\n// margin: 5,\n// backgroundColor: 'black'\n},frameStyle:{width:200,margin:5,borderRadius:5,backgroundColor:'black'},showMuteControls:true// ref={this.localVideoref}\n,videoStream:this.state.localStream,autoPlay:true,muted:true})}),/*#__PURE__*/_jsx(Video,{videoStyles:{zIndex:1,position:'fixed',bottom:0,minWidth:'100%',minHeight:'100%',backgroundColor:'black'}// ref={ this.remoteVideoref }\n,videoStream:this.state.selectedVideo&&this.state.selectedVideo.stream,autoPlay:true}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsxs(\"div\",{style:{zIndex:3,position:'absolute'// margin: 10,\n// backgroundColor: '#cdc4ff4f',\n// padding: 10,\n// borderRadius: 5,\n},children:[/*#__PURE__*/_jsx(\"i\",{onClick:function onClick(e){_this2.setState({disconnected:true});},style:{cursor:'pointer',paddingLeft:15,color:'red'},className:\"material-icons\",children:\"highlight_off\"}),/*#__PURE__*/_jsx(\"div\",{style:{margin:10,backgroundColor:'#cdc4ff4f',padding:10,borderRadius:5},children:statusText})]}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(Videos,{switchVideo:this.switchVideo,remoteStreams:this.state.remoteStreams})}),/*#__PURE__*/_jsx(\"br\",{})]});}}]);return App;}(Component);export default App;","map":{"version":3,"names":["React","Component","io","Video","Videos","jsx","_jsx","jsxs","_jsxs","App","_Component","_inherits","_super","_createSuper","props","_this","_classCallCheck","call","getLocalStream","success","stream","window","localStream","setState","whoisOnline","failure","e","console","log","constraints","audio","video","options","mirror","navigator","mediaDevices","getUserMedia","then","catch","sendToPeer","local","socket","id","messageType","payload","socketID","emit","createPeerConnection","callback","pc","RTCPeerConnection","state","pc_config","peerConnections","_objectSpread","_defineProperty","onicecandidate","candidate","remote","oniceconnectionstatechange","ontrack","_remoteStream","remoteStreams","remoteVideo","rVideos","filter","length","addTrack","track","map","_remoteVideo","MediaStream","name","concat","_toConsumableArray","prevState","remoteStream","streams","selectedVideo","close","getTracks","forEach","componentDidMount","connect","serviceIP","path","query","room","location","pathname","on","data","status","peerCount","createOffer","sdpConstraints","sdp","setLocalDescription","addStream","setRemoteDescription","RTCSessionDescription","createAnswer","addIceCandidate","RTCIceCandidate","switchVideo","_video","urls","_createClass","key","value","render","_this2","statusText","style","color","padding","children","Draggable","zIndex","position","right","cursor","videoStyles","width","frameStyle","margin","borderRadius","backgroundColor","showMuteControls","videoStream","autoPlay","muted","bottom","minWidth","minHeight","onClick","disconnected","paddingLeft","className"],"sources":["/Users/Dani/Desktop/webrtc/src/App.js"],"sourcesContent":["import React, { Component } from 'react';\n\nimport io from 'socket.io-client'\n\nimport Video from './components/video'\nimport Videos from './components/videos'\n\nclass App extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            localStream: null,    // used to hold local stream object to avoid recreating the stream everytime a new offer comes\n            remoteStream: null,    // used to hold remote stream object that is displayed in the main screen\n\n            remoteStreams: [],    // holds all Video Streams (all remote streams)\n            peerConnections: {},  // holds all Peer Connections\n            selectedVideo: null,\n\n            status: 'Please wait...',\n\n            pc_config: {\n                \"iceServers\": [\n                    {\n                        urls : 'stun:stun.l.google.com:19302'\n                    }\n                ]\n            },\n\n            sdpConstraints: {\n                'mandatory': {\n                    'OfferToReceiveAudio': true,\n                    'OfferToReceiveVideo': true\n                }\n            },\n        }\n\n        // DONT FORGET TO CHANGE TO YOUR URL\n        this.serviceIP = 'https://deripio.serveo.net/webrtcPeer'\n\n        // https://reactjs.org/docs/refs-and-the-dom.html\n        // this.localVideoref = React.createRef()\n        // this.remoteVideoref = React.createRef()\n\n        this.socket = null\n        // this.candidates = []\n    }\n\n    getLocalStream = () => {\n        // called when getUserMedia() successfully returns - see below\n        // getUserMedia() returns a MediaStream object (https://developer.mozilla.org/en-US/docs/Web/API/MediaStream)\n        const success = (stream) => {\n            window.localStream = stream\n            // this.localVideoref.current.srcObject = stream\n            // this.pc.addStream(stream);\n            this.setState({\n                localStream: stream\n            })\n\n            this.whoisOnline()\n        }\n\n        // called when getUserMedia() fails - see below\n        const failure = (e) => {\n            console.log('getUserMedia Error: ', e)\n        }\n\n        // https://developer.mozilla.org/en-US/docs/Web/API/MediaDevices/getUserMedia\n        // see the above link for more constraint options\n        const constraints = {\n            audio: true,\n            video: true,\n            // video: {\n            //   width: 1280,\n            //   height: 720\n            // },\n            // video: {\n            //   width: { min: 1280 },\n            // }\n            options: {\n                mirror: true,\n            }\n        }\n\n        // https://developer.mozilla.org/en-US/docs/Web/API/MediaDevices/getUserMedia\n        navigator.mediaDevices.getUserMedia(constraints)\n            .then(success)\n            .catch(failure)\n    }\n\n    whoisOnline = () => {\n        // let all peers know I am joining\n        this.sendToPeer('onlinePeers', null, {local: this.socket.id})\n    }\n\n    sendToPeer = (messageType, payload, socketID) => {\n        this.socket.emit(messageType, {\n            socketID,\n            payload\n        })\n    }\n\n    createPeerConnection = (socketID, callback) => {\n\n        try {\n            let pc = new RTCPeerConnection(this.state.pc_config)\n\n            // add pc to peerConnections object\n            const peerConnections = { ...this.state.peerConnections, [socketID]: pc }\n            this.setState({\n                peerConnections\n            })\n\n            pc.onicecandidate = (e) => {\n                if (e.candidate) {\n                    this.sendToPeer('candidate', e.candidate, {\n                        local: this.socket.id,\n                        remote: socketID\n                    })\n                }\n            }\n\n            pc.oniceconnectionstatechange = (e) => {\n                // if (pc.iceConnectionState === 'disconnected') {\n                //   const remoteStreams = this.state.remoteStreams.filter(stream => stream.id !== socketID)\n\n                //   this.setState({\n                //     remoteStream: remoteStreams.length > 0 && remoteStreams[0].stream || null,\n                //   })\n                // }\n\n            }\n\n            pc.ontrack = (e) => {\n\n                let _remoteStream = null\n                let remoteStreams = this.state.remoteStreams\n                let remoteVideo = {}\n\n\n                // 1. check if stream already exists in remoteStreams\n                const rVideos = this.state.remoteStreams.filter(stream => stream.id === socketID)\n\n                // 2. if it does exist then add track\n                if (rVideos.length) {\n                    _remoteStream = rVideos[0].stream\n                    _remoteStream.addTrack(e.track, _remoteStream)\n                    remoteVideo = {\n                        ...rVideos[0],\n                        stream: _remoteStream,\n                    }\n                    remoteStreams = this.state.remoteStreams.map(_remoteVideo => {\n                        return _remoteVideo.id === remoteVideo.id && remoteVideo || _remoteVideo\n                    })\n                } else {\n                    // 3. if not, then create new stream and add track\n                    _remoteStream = new MediaStream()\n                    _remoteStream.addTrack(e.track, _remoteStream)\n\n                    remoteVideo = {\n                        id: socketID,\n                        name: socketID,\n                        stream: _remoteStream,\n                    }\n                    remoteStreams = [...this.state.remoteStreams, remoteVideo]\n                }\n\n                // const remoteVideo = {\n                //   id: socketID,\n                //   name: socketID,\n                //   stream: e.streams[0]\n                // }\n\n                this.setState(prevState => {\n\n                    // If we already have a stream in display let it stay the same, otherwise use the latest stream\n                    const remoteStream = prevState.remoteStreams.length > 0 ? {} : { remoteStream: e.streams[0] }\n\n                    // get currently selected video\n                    let selectedVideo = prevState.remoteStreams.filter(stream => stream.id === prevState.selectedVideo.id)\n                    // if the video is still in the list, then do nothing, otherwise set to new video stream\n                    selectedVideo = selectedVideo.length ? {} : { selectedVideo: remoteVideo }\n\n                    return {\n                        // selectedVideo: remoteVideo,\n                        ...selectedVideo,\n                        // remoteStream: e.streams[0],\n                        ...remoteStream,\n                        remoteStreams: [...prevState.remoteStreams, remoteVideo]\n                    }\n                })\n            }\n\n            pc.close = () => {\n                // alert('GONE')\n            }\n\n            if (this.state.localStream)\n                //pc.addStream(this.state.localStream)\n\n                this.state.localStream.getTracks().forEach(track => {\n                    pc.addTrack(track, this.state.localStream)\n                })\n\n            // return pc\n            callback(pc)\n\n        } catch(e) {\n            console.log('Something went wrong! pc not created!!', e)\n            // return;\n            callback(null)\n        }\n    }\n\n    componentDidMount = () => {\n\n        this.socket = io.connect(\n            this.serviceIP,\n            {\n                path: '/io/webrtc',\n                query: {\n                    room: window.location.pathname,\n                }\n            }\n        )\n\n        this.socket.on('connection-success', data => {\n\n            this.getLocalStream()\n\n            console.log(data.success)\n            const status = data.peerCount > 1 ? `Total Connected Peers to room ${window.location.pathname}: ${data.peerCount}` : 'Waiting for other peers to connect'\n\n            this.setState({\n                status: status\n            })\n        })\n\n        this.socket.on('joined-peers', data => {\n\n            this.setState({\n                status: data.peerCount > 1 ? `Total Connected Peers to room ${window.location.pathname}: ${data.peerCount}` : 'Waiting for other peers to connect'\n            })\n        })\n\n        this.socket.on('peer-disconnected', data => {\n            console.log('peer-disconnected', data)\n\n            const remoteStreams = this.state.remoteStreams.filter(stream => stream.id !== data.socketID)\n\n            this.setState(prevState => {\n                    // check if disconnected peer is the selected video and if there still connected peers, then select the first\n                    const selectedVideo = prevState.selectedVideo.id === data.socketID && remoteStreams.length ? { selectedVideo: remoteStreams[0] } : null\n\n                    return {\n                        // remoteStream: remoteStreams.length > 0 && remoteStreams[0].stream || null,\n                        remoteStreams,\n                        ...selectedVideo,\n                        status: data.peerCount > 1 ? `Total Connected Peers to room ${window.location.pathname}: ${data.peerCount}` : 'Waiting for other peers to connect'\n                    }\n                }\n            )\n        })\n\n        // this.socket.on('offerOrAnswer', (sdp) => {\n\n        //   this.textref.value = JSON.stringify(sdp)\n\n        //   // set sdp as remote description\n        //   this.pc.setRemoteDescription(new RTCSessionDescription(sdp))\n        // })\n\n        this.socket.on('online-peer', socketID => {\n            console.log('connected peers ...', socketID)\n\n            // create and send offer to the peer (data.socketID)\n            // 1. Create new pc\n            this.createPeerConnection(socketID, pc => {\n                // 2. Create Offer\n                if (pc)\n                    pc.createOffer(this.state.sdpConstraints)\n                        .then(sdp => {\n                            pc.setLocalDescription(sdp)\n\n                            this.sendToPeer('offer', sdp, {\n                                local: this.socket.id,\n                                remote: socketID\n                            })\n                        })\n            })\n        })\n\n        this.socket.on('offer', data => {\n            this.createPeerConnection(data.socketID, pc => {\n                pc.addStream(this.state.localStream)\n\n                pc.setRemoteDescription(new RTCSessionDescription(data.sdp)).then(() => {\n                    // 2. Create Answer\n                    pc.createAnswer(this.state.sdpConstraints)\n                        .then(sdp => {\n                            pc.setLocalDescription(sdp)\n\n                            this.sendToPeer('answer', sdp, {\n                                local: this.socket.id,\n                                remote: data.socketID\n                            })\n                        })\n                })\n            })\n        })\n\n        this.socket.on('answer', data => {\n            // get remote's peerConnection\n            const pc = this.state.peerConnections[data.socketID]\n            console.log(data.sdp)\n            pc.setRemoteDescription(new RTCSessionDescription(data.sdp)).then(()=>{})\n        })\n\n        this.socket.on('candidate', (data) => {\n            // get remote's peerConnection\n            const pc = this.state.peerConnections[data.socketID]\n\n            if (pc)\n                pc.addIceCandidate(new RTCIceCandidate(data.candidate))\n        })\n\n        // const pc_config = null\n\n        // const pc_config = {\n        //   \"iceServers\": [\n        //     // {\n        //     //   urls: 'stun:[STUN_IP]:[PORT]',\n        //     //   'credentials': '[YOR CREDENTIALS]',\n        //     //   'username': '[USERNAME]'\n        //     // },\n        //     {\n        //       urls : 'stun:stun.l.google.com:19302'\n        //     }\n        //   ]\n        // }\n\n        // https://developer.mozilla.org/en-US/docs/Web/API/RTCPeerConnection\n        // create an instance of RTCPeerConnection\n        // this.pc = new RTCPeerConnection(this.state.pc_config)\n\n        // triggered when a new candidate is returned\n        // this.pc.onicecandidate = (e) => {\n        //   // send the candidates to the remote peer\n        //   // see addCandidate below to be triggered on the remote peer\n        //   if (e.candidate) {\n        //     // console.log(JSON.stringify(e.candidate))\n        //     this.sendToPeer('candidate', e.candidate)\n        //   }\n        // }\n\n        // triggered when there is a change in connection state\n        // this.pc.oniceconnectionstatechange = (e) => {\n        //   console.log(e)\n        // }\n\n        // triggered when a stream is added to pc, see below - this.pc.addStream(stream)\n        // this.pc.onaddstream = (e) => {\n        //   this.remoteVideoref.current.srcObject = e.stream\n        // }\n\n        // this.pc.ontrack = (e) => {\n        //   debugger\n        //   // this.remoteVideoref.current.srcObject = e.streams[0]\n\n        //   this.setState({\n        //     remoteStream: e.streams[0]\n        //   })\n        // }\n\n    }\n\n    switchVideo = (_video) => {\n        console.log(_video)\n        this.setState({\n            selectedVideo: _video\n        })\n    }\n\n    render() {\n\n        console.log(this.state.localStream)\n\n        const statusText = <div style={{ color: 'yellow', padding: 5 }}>{this.state.status}</div>\n\n        return (\n            <div>\n                <Draggable style={{\n                    zIndex: 101,\n                    position: 'absolute',\n                    right: 0,\n                    cursor: 'move'\n                }}>\n                    <Video\n                        videoStyles={{\n                            // zIndex:2,\n                            // position: 'absolute',\n                            // right:0,\n                            width: 200,\n                            // height: 200,\n                            // margin: 5,\n                            // backgroundColor: 'black'\n                        }}\n                        frameStyle={{\n                            width: 200,\n                            margin: 5,\n                            borderRadius: 5,\n                            backgroundColor: 'black',\n                        }}\n                        showMuteControls={true}\n                        // ref={this.localVideoref}\n                        videoStream={this.state.localStream}\n                        autoPlay muted>\n                    </Video>\n                </Draggable>\n                <Video\n                    videoStyles={{\n                        zIndex: 1,\n                        position: 'fixed',\n                        bottom: 0,\n                        minWidth: '100%',\n                        minHeight: '100%',\n                        backgroundColor: 'black'\n                    }}\n                    // ref={ this.remoteVideoref }\n                    videoStream={this.state.selectedVideo && this.state.selectedVideo.stream}\n                    autoPlay>\n                </Video>\n                <br/>\n                <div style={{\n                    zIndex: 3,\n                    position: 'absolute',\n                    // margin: 10,\n                    // backgroundColor: '#cdc4ff4f',\n                    // padding: 10,\n                    // borderRadius: 5,\n                }}>\n                    <i onClick={(e) => {\n                        this.setState({disconnected: true})\n                    }} style={{cursor: 'pointer', paddingLeft: 15, color: 'red'}}\n                       className='material-icons'>highlight_off</i>\n                    <div style={{\n                        margin: 10,\n                        backgroundColor: '#cdc4ff4f',\n                        padding: 10,\n                        borderRadius: 5,\n                    }}>{statusText}</div>\n                </div>\n                <div>\n                    <Videos\n                        switchVideo={this.switchVideo}\n                        remoteStreams={this.state.remoteStreams}\n                    ></Videos>\n                </div>\n                <br/>\n\n                {/* <div style={{zIndex: 1, position: 'fixed'}} >\n          <button onClick={this.createOffer}>Offer</button>\n          <button onClick={this.createAnswer}>Answer</button>\n\n          <br />\n          <textarea style={{ width: 450, height:40 }} ref={ref => { this.textref = ref }} />\n        </div> */}\n                {/* <br />\n        <button onClick={this.setRemoteDescription}>Set Remote Desc</button>\n        <button onClick={this.addCandidate}>Add Candidate</button> */}\n            </div>\n        )\n    }\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}