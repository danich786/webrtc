{"ast":null,"code":"var _jsxFileName = \"/Users/Dani/Desktop/webrtc/src/App.js\";\nimport React, { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    // https://reactjs.org/docs/refs-and-the-dom.html\n    this.componentDidMount = () => {\n      const pc_config = null;\n\n      // const pc_config1 = {\n      //   \"iceServers\": [\n      //     {\n      //       urls: 'stun:[STUN_IP]:[PORT]',\n      //       'credentials': '[YOR CREDENTIALS]',\n      //       'username': '[USERNAME]'\n      //     }\n      //   ]\n      // }\n\n      // https://developer.mozilla.org/en-US/docs/Web/API/RTCPeerConnection\n      // create an instance of RTCPeerConnection\n      this.pc = new RTCPeerConnection(pc_config);\n\n      // triggered when a new candidate is returned\n      this.pc.onicecandidate = e => {\n        // send the candidates to the remote peer\n        // see addCandidate below to be triggered on the remote peer\n        if (e.candidate) console.log(JSON.stringify(e.candidate));\n      };\n\n      // triggered when there is a change in connection state\n      this.pc.oniceconnectionstatechange = e => {\n        console.log(e);\n      };\n\n      // triggered when a stream is added to pc, see below - this.pc.addStream(stream)\n      // this.pc.onaddstream = (e) => {\n      //   this.remoteVideoref.current.srcObject = e.stream\n      // }\n\n      this.pc.ontrack = e => {\n        this.remoteVideoref.current.srcObject = e.streams[0];\n      };\n\n      // called when getUserMedia() successfully returns - see below\n      // getUserMedia() returns a MediaStream object (https://developer.mozilla.org/en-US/docs/Web/API/MediaStream)\n      const success = stream => {\n        window.localStream = stream;\n        this.localVideoref.current.srcObject = stream;\n        this.pc.addStream(stream);\n      };\n\n      // called when getUserMedia() fails - see below\n      const failure = e => {\n        console.log('getUserMedia Error: ', e);\n      };\n\n      // https://developer.mozilla.org/en-US/docs/Web/API/MediaDevices/getUserMedia\n      // see the above link for more constraint options\n      const constraints = {\n        audio: false,\n        video: true\n        // video: {\n        //   width: 1280,\n        //   height: 720\n        // },\n        // video: {\n        //   width: { min: 1280 },\n        // }\n      };\n\n      // https://developer.mozilla.org/en-US/docs/Web/API/MediaDevices/getUserMedia\n      navigator.mediaDevices.getUserMedia(constraints).then(success).catch(failure);\n    };\n    /* ACTION METHODS FROM THE BUTTONS ON SCREEN */\n    this.createOffer = () => {\n      console.log('Offer');\n\n      // https://developer.mozilla.org/en-US/docs/Web/API/RTCPeerConnection/createOffer\n      // initiates the creation of SDP\n      this.pc.createOffer({\n        offerToReceiveVideo: 1\n      }).then(sdp => {\n        console.log(JSON.stringify(sdp));\n\n        // set offer sdp as local description\n        this.pc.setLocalDescription(sdp);\n      });\n    };\n    // https://developer.mozilla.org/en-US/docs/Web/API/RTCPeerConnection/createAnswer\n    // creates an SDP answer to an offer received from remote peer\n    this.createAnswer = () => {\n      console.log('Answer');\n      this.pc.createAnswer({\n        offerToReceiveVideo: 1\n      }).then(sdp => {\n        console.log(JSON.stringify(sdp));\n\n        // set answer sdp as local description\n        this.pc.setLocalDescription(sdp);\n      });\n    };\n    this.setRemoteDescription = () => {\n      // retrieve and parse the SDP copied from the remote peer\n      const desc = JSON.parse(this.textref.value);\n\n      // set sdp as remote description\n      this.pc.setRemoteDescription(new RTCSessionDescription(desc));\n    };\n    this.addCandidate = () => {\n      // retrieve and parse the Candidate copied from the remote peer\n      const candidate = JSON.parse(this.textref.value);\n      console.log('Adding candidate:', candidate);\n\n      // add the candidate to the peer connection\n      this.pc.addIceCandidate(new RTCIceCandidate(candidate));\n    };\n    this.localVideoref = /*#__PURE__*/React.createRef();\n    this.remoteVideoref = /*#__PURE__*/React.createRef();\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"video\", {\n        style: {\n          width: 240,\n          height: 240,\n          margin: 5,\n          backgroundColor: 'black'\n        },\n        ref: this.localVideoref,\n        autoPlay: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"video\", {\n        style: {\n          width: 240,\n          height: 240,\n          margin: 5,\n          backgroundColor: 'black'\n        },\n        ref: this.remoteVideoref,\n        autoPlay: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.createOffer,\n        children: \"Offer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.createAnswer,\n        children: \"Answer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        ref: ref => {\n          this.textref = ref;\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.setRemoteDescription,\n        children: \"Set Remote Desc\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.addCandidate,\n        children: \"Add Candidate\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default App;","map":{"version":3,"names":["React","Component","jsxDEV","_jsxDEV","App","constructor","props","componentDidMount","pc_config","pc","RTCPeerConnection","onicecandidate","e","candidate","console","log","JSON","stringify","oniceconnectionstatechange","ontrack","remoteVideoref","current","srcObject","streams","success","stream","window","localStream","localVideoref","addStream","failure","constraints","audio","video","navigator","mediaDevices","getUserMedia","then","catch","createOffer","offerToReceiveVideo","sdp","setLocalDescription","createAnswer","setRemoteDescription","desc","parse","textref","value","RTCSessionDescription","addCandidate","addIceCandidate","RTCIceCandidate","createRef","render","children","style","width","height","margin","backgroundColor","ref","autoPlay","fileName","_jsxFileName","lineNumber","columnNumber","onClick"],"sources":["/Users/Dani/Desktop/webrtc/src/App.js"],"sourcesContent":["import React, { Component } from 'react';\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n\n    // https://reactjs.org/docs/refs-and-the-dom.html\n    this.localVideoref = React.createRef()\n    this.remoteVideoref = React.createRef()\n  }\n\n  componentDidMount = () => {\n\n    const pc_config = null\n\n    // const pc_config1 = {\n    //   \"iceServers\": [\n    //     {\n    //       urls: 'stun:[STUN_IP]:[PORT]',\n    //       'credentials': '[YOR CREDENTIALS]',\n    //       'username': '[USERNAME]'\n    //     }\n    //   ]\n    // }\n\n    // https://developer.mozilla.org/en-US/docs/Web/API/RTCPeerConnection\n    // create an instance of RTCPeerConnection\n    this.pc = new RTCPeerConnection(pc_config)\n\n    // triggered when a new candidate is returned\n    this.pc.onicecandidate = (e) => {\n      // send the candidates to the remote peer\n      // see addCandidate below to be triggered on the remote peer\n      if (e.candidate)\n        console.log(JSON.stringify(e.candidate))\n    }\n\n    // triggered when there is a change in connection state\n    this.pc.oniceconnectionstatechange = (e) => {\n      console.log(e)\n    }\n\n    // triggered when a stream is added to pc, see below - this.pc.addStream(stream)\n    // this.pc.onaddstream = (e) => {\n    //   this.remoteVideoref.current.srcObject = e.stream\n    // }\n\n    this.pc.ontrack = (e) => {\n      this.remoteVideoref.current.srcObject = e.streams[0]\n    }\n\n    // called when getUserMedia() successfully returns - see below\n    // getUserMedia() returns a MediaStream object (https://developer.mozilla.org/en-US/docs/Web/API/MediaStream)\n    const success = (stream) => {\n      window.localStream = stream\n      this.localVideoref.current.srcObject = stream\n      this.pc.addStream(stream)\n    }\n\n    // called when getUserMedia() fails - see below\n    const failure = (e) => {\n      console.log('getUserMedia Error: ', e)\n    }\n\n    // https://developer.mozilla.org/en-US/docs/Web/API/MediaDevices/getUserMedia\n    // see the above link for more constraint options\n    const constraints = {\n      audio: false,\n      video: true,\n      // video: {\n      //   width: 1280,\n      //   height: 720\n      // },\n      // video: {\n      //   width: { min: 1280 },\n      // }\n    }\n\n    // https://developer.mozilla.org/en-US/docs/Web/API/MediaDevices/getUserMedia\n    navigator.mediaDevices.getUserMedia(constraints)\n      .then(success)\n      .catch(failure)\n  }\n\n  /* ACTION METHODS FROM THE BUTTONS ON SCREEN */\n\n  createOffer = () => {\n    console.log('Offer')\n\n    // https://developer.mozilla.org/en-US/docs/Web/API/RTCPeerConnection/createOffer\n    // initiates the creation of SDP\n    this.pc.createOffer({ offerToReceiveVideo: 1 })\n      .then(sdp => {\n        console.log(JSON.stringify(sdp))\n\n        // set offer sdp as local description\n        this.pc.setLocalDescription(sdp)\n    })\n  }\n\n  // https://developer.mozilla.org/en-US/docs/Web/API/RTCPeerConnection/createAnswer\n  // creates an SDP answer to an offer received from remote peer\n  createAnswer = () => {\n    console.log('Answer')\n    this.pc.createAnswer({ offerToReceiveVideo: 1 })\n      .then(sdp => {\n        console.log(JSON.stringify(sdp))\n\n        // set answer sdp as local description\n        this.pc.setLocalDescription(sdp)\n    })\n  }\n\n  setRemoteDescription = () => {\n    // retrieve and parse the SDP copied from the remote peer\n    const desc = JSON.parse(this.textref.value)\n\n    // set sdp as remote description\n    this.pc.setRemoteDescription(new RTCSessionDescription(desc))\n  }\n\n  addCandidate = () => {\n    // retrieve and parse the Candidate copied from the remote peer\n    const candidate = JSON.parse(this.textref.value)\n    console.log('Adding candidate:', candidate)\n\n    // add the candidate to the peer connection\n    this.pc.addIceCandidate(new RTCIceCandidate(candidate))\n  }\n\n  render() {\n\n    return (\n      <div>\n        <video\n          style={{\n            width: 240,\n            height: 240,\n            margin: 5,\n            backgroundColor: 'black'\n          }}\n          ref={ this.localVideoref }\n          autoPlay>\n        </video>\n        <video\n          style={{\n            width: 240,\n            height: 240,\n            margin: 5,\n            backgroundColor: 'black'\n          }}\n          ref={ this.remoteVideoref }\n          autoPlay>\n        </video>\n        <br />\n\n        <button onClick={this.createOffer}>Offer</button>\n        <button onClick={this.createAnswer}>Answer</button>\n\n        <br />\n        <textarea ref={ref => { this.textref = ref }} />\n\n        <br />\n        <button onClick={this.setRemoteDescription}>Set Remote Desc</button>\n        <button onClick={this.addCandidate}>Add Candidate</button>\n      </div>\n    )\n  }\n}\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}